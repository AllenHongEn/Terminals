//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.17929
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotRas.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DotRas.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} contained a non-interactive flag, however the authentication protocol  must display a UI to obtain the required identity information. ähnelt.
        /// </summary>
        internal static string Argument_EapOptionsRequireInteractiveMode {
            get {
                return ResourceManager.GetString("Argument_EapOptionsRequireInteractiveMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The phone number cannot be an empty string if the entry name has not been provided. ähnelt.
        /// </summary>
        internal static string Argument_EmptyEntryNameAndPhoneNumber {
            get {
                return ResourceManager.GetString("Argument_EmptyEntryNameAndPhoneNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; already exists in the phone book. ähnelt.
        /// </summary>
        internal static string Argument_EntryAlreadyExists {
            get {
                return ResourceManager.GetString("Argument_EntryAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The file &apos;{0}&apos; could not be found. ähnelt.
        /// </summary>
        internal static string Argument_FileNotFound {
            get {
                return ResourceManager.GetString("Argument_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} contains an incorrect address family. ähnelt.
        /// </summary>
        internal static string Argument_IncorrectAddressFamily {
            get {
                return ResourceManager.GetString("Argument_IncorrectAddressFamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The {0} &apos;{1}&apos; is invalid. Ensure the entry does not already exist in the phone book, and does not contain invalid characters. ähnelt.
        /// </summary>
        internal static string Argument_InvalidEntryName {
            get {
                return ResourceManager.GetString("Argument_InvalidEntryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; contains an invalid file name. ähnelt.
        /// </summary>
        internal static string Argument_InvalidFileName {
            get {
                return ResourceManager.GetString("Argument_InvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; was not a valid handle. ähnelt.
        /// </summary>
        internal static string Argument_InvalidHandle {
            get {
                return ResourceManager.GetString("Argument_InvalidHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; contains invalid or conflicting settings. Please verify the settings are correct and try again. ähnelt.
        /// </summary>
        internal static string Argument_InvalidOrConflictingEntrySettings {
            get {
                return ResourceManager.GetString("Argument_InvalidOrConflictingEntrySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; must have the PhoneNumber, DeviceType, DeviceName, FramingProtocol, and EntryType properties set as a minimum. ähnelt.
        /// </summary>
        internal static string Argument_MissingRequiredInfo {
            get {
                return ResourceManager.GetString("Argument_MissingRequiredInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; cannot be a null reference or empty string. ähnelt.
        /// </summary>
        internal static string Argument_StringCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("Argument_StringCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} must be greater than zero. ähnelt.
        /// </summary>
        internal static string Argument_ValueCannotBeLessThanOrEqualToZero {
            get {
                return ResourceManager.GetString("Argument_ValueCannotBeLessThanOrEqualToZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} cannot be less than zero. ähnelt.
        /// </summary>
        internal static string Argument_ValueCannotBeLessThanZero {
            get {
                return ResourceManager.GetString("Argument_ValueCannotBeLessThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; specified is longer than the string. ähnelt.
        /// </summary>
        internal static string Argument_ValueLongerThanString {
            get {
                return ResourceManager.GetString("Argument_ValueLongerThanString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} must be greater than zero and less than or equal to {1}. ähnelt.
        /// </summary>
        internal static string Argument_ValueMustBeGreaterThanZeroLessThanOrEqualToOtherValue {
            get {
                return ResourceManager.GetString("Argument_ValueMustBeGreaterThanZeroLessThanOrEqualToOtherValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Appearance ähnelt.
        /// </summary>
        internal static string CatAppearance {
            get {
                return ResourceManager.GetString("CatAppearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Behavior ähnelt.
        /// </summary>
        internal static string CatBehavior {
            get {
                return ResourceManager.GetString("CatBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data ähnelt.
        /// </summary>
        internal static string CatData {
            get {
                return ResourceManager.GetString("CatData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Layout ähnelt.
        /// </summary>
        internal static string CatLayout {
            get {
                return ResourceManager.GetString("CatLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The caption of the dialog box. ähnelt.
        /// </summary>
        internal static string CPDCaptionDesc {
            get {
                return ResourceManager.GetString("CPDCaptionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the user name should be disabled. ähnelt.
        /// </summary>
        internal static string CPDDisableUserNameDesc {
            get {
                return ResourceManager.GetString("CPDDisableUserNameDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The maximum length of the password. ähnelt.
        /// </summary>
        internal static string CPDMaxPasswordLengthDesc {
            get {
                return ResourceManager.GetString("CPDMaxPasswordLengthDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The maximum length of the user name. ähnelt.
        /// </summary>
        internal static string CPDMaxUserNameLengthDesc {
            get {
                return ResourceManager.GetString("CPDMaxUserNameLengthDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The message of the dialog box. ähnelt.
        /// </summary>
        internal static string CPDMessageDesc {
            get {
                return ResourceManager.GetString("CPDMessageDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the user should be notified the password was incorrect. ähnelt.
        /// </summary>
        internal static string CPDNotifyIncorrectPasswordDesc {
            get {
                return ResourceManager.GetString("CPDNotifyIncorrectPasswordDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The password. ähnelt.
        /// </summary>
        internal static string CPDPasswordDesc {
            get {
                return ResourceManager.GetString("CPDPasswordDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the save check box will be checked. ähnelt.
        /// </summary>
        internal static string CPDSaveCheckedDesc {
            get {
                return ResourceManager.GetString("CPDSaveCheckedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the &apos;Remember my password&apos; check box will be shown. ähnelt.
        /// </summary>
        internal static string CPDShowSaveCheckBoxDesc {
            get {
                return ResourceManager.GetString("CPDShowSaveCheckBoxDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The target name. ähnelt.
        /// </summary>
        internal static string CPDTargetNameDesc {
            get {
                return ResourceManager.GetString("CPDTargetNameDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The user name. ähnelt.
        /// </summary>
        internal static string CPDUserNameDesc {
            get {
                return ResourceManager.GetString("CPDUserNameDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The name of the phone book entry to modify. ähnelt.
        /// </summary>
        internal static string EPBEDEntryNameDesc {
            get {
                return ResourceManager.GetString("EPBEDEntryNameDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The caller does not have the required permission to perform the action requested. ähnelt.
        /// </summary>
        internal static string Exception_AccessDeniedBySecurity {
            get {
                return ResourceManager.GetString("Exception_AccessDeniedBySecurity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The value &apos;{0}&apos; is not supported for conversion. ähnelt.
        /// </summary>
        internal static string Exception_ConversionNotSupported {
            get {
                return ResourceManager.GetString("Exception_ConversionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The entry is not associated with a phone book. ähnelt.
        /// </summary>
        internal static string Exception_EntryNotInPhoneBook {
            get {
                return ResourceManager.GetString("Exception_EntryNotInPhoneBook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The handle is not network access protection (NAP) capable. ähnelt.
        /// </summary>
        internal static string Exception_HandleNotNapCapable {
            get {
                return ResourceManager.GetString("Exception_HandleNotNapCapable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The connection must be a valid IKEv2 connection. ähnelt.
        /// </summary>
        internal static string Exception_InvalidIkeV2Handle {
            get {
                return ResourceManager.GetString("Exception_InvalidIkeV2Handle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The handle is invalid or closed. ähnelt.
        /// </summary>
        internal static string Exception_InvalidOrClosedHandle {
            get {
                return ResourceManager.GetString("Exception_InvalidOrClosedHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not supported on the current platform. ähnelt.
        /// </summary>
        internal static string Exception_NotSupportedOnPlatform {
            get {
                return ResourceManager.GetString("Exception_NotSupportedOnPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation has timed out. ähnelt.
        /// </summary>
        internal static string Exception_OperationTimedOut {
            get {
                return ResourceManager.GetString("Exception_OperationTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The phone book is corrupted or missing components. ähnelt.
        /// </summary>
        internal static string Exception_PhonebookCorrupted {
            get {
                return ResourceManager.GetString("Exception_PhonebookCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The phone book must be opened prior to performing this operation. ähnelt.
        /// </summary>
        internal static string Exception_PhoneBookNotOpened {
            get {
                return ResourceManager.GetString("Exception_PhoneBookNotOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The phone number or entry name (with phone book path) is required to dial an entry. ähnelt.
        /// </summary>
        internal static string Exception_PhoneNumberOrEntryNameRequired {
            get {
                return ResourceManager.GetString("Exception_PhoneNumberOrEntryNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The application attempted to set default credentials for a per-user connection, or the user does not have the correct privileges to set pre-shared keys or credentials for all users. ähnelt.
        /// </summary>
        internal static string Exception_SetCredentialsAccessDenied {
            get {
                return ResourceManager.GetString("Exception_SetCredentialsAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The TargetName property cannot be a null reference. ähnelt.
        /// </summary>
        internal static string Exception_TargetNameCannotBeNullReference {
            get {
                return ResourceManager.GetString("Exception_TargetNameCannotBeNullReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The type converter cannot convert from type {0}. ähnelt.
        /// </summary>
        internal static string Exception_TypeConverterCannotConvertFromType {
            get {
                return ResourceManager.GetString("Exception_TypeConverterCannotConvertFromType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The type converter for {0} could not be found. ähnelt.
        /// </summary>
        internal static string Exception_TypeConverterNotFound {
            get {
                return ResourceManager.GetString("Exception_TypeConverterNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The size of the object returned was not expected. ähnelt.
        /// </summary>
        internal static string Exception_UnexpectedSizeReturned {
            get {
                return ResourceManager.GetString("Exception_UnexpectedSizeReturned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Items within the collection cannot be set directly. ähnelt.
        /// </summary>
        internal static string NotSupported_ItemsCannotBeSet {
            get {
                return ResourceManager.GetString("NotSupported_ItemsCannotBeSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The length of time (in seconds) before the connection attempt is aborted. ähnelt.
        /// </summary>
        internal static string RADMConnectionQueryTimeoutDesc {
            get {
                return ResourceManager.GetString("RADMConnectionQueryTimeoutDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether AutoDial displays a dialog box to query the user before creating a connection. ähnelt.
        /// </summary>
        internal static string RADMDisableConnectionQueryDesc {
            get {
                return ResourceManager.GetString("RADMDisableConnectionQueryDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The length of time (in seconds) between AutoDial connection attempts. ähnelt.
        /// </summary>
        internal static string RADMFailedConnectionTimeoutDesc {
            get {
                return ResourceManager.GetString("RADMFailedConnectionTimeoutDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the system disables all AutoDial connections for the current session. ähnelt.
        /// </summary>
        internal static string RADMLogOnSessionDisableDesc {
            get {
                return ResourceManager.GetString("RADMLogOnSessionDisableDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The maximum number of addresses that AutoDial stores in the registry. ähnelt.
        /// </summary>
        internal static string RADMSavedAddressesLimitDesc {
            get {
                return ResourceManager.GetString("RADMSavedAddressesLimitDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the dialog has encountered an error. ähnelt.
        /// </summary>
        internal static string RCDErrorDesc {
            get {
                return ResourceManager.GetString("RCDErrorDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The coordinates of the upper-left corner of the dialog box. ähnelt.
        /// </summary>
        internal static string RCDLocationDesc {
            get {
                return ResourceManager.GetString("RCDLocationDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the component has encountered an error. ähnelt.
        /// </summary>
        internal static string RCErrorDesc {
            get {
                return ResourceManager.GetString("RCErrorDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The object used to marshal event-handler calls. ähnelt.
        /// </summary>
        internal static string RCSyncObjectDesc {
            get {
                return ResourceManager.GetString("RCSyncObjectDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when a remote access connection sub-entry has connected. ähnelt.
        /// </summary>
        internal static string RCWBandwidthAddedDesc {
            get {
                return ResourceManager.GetString("RCWBandwidthAddedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when a remote access connection sub-entry has disconnected. ähnelt.
        /// </summary>
        internal static string RCWBandwidthRemovedDesc {
            get {
                return ResourceManager.GetString("RCWBandwidthRemovedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when a remote access connection is established. ähnelt.
        /// </summary>
        internal static string RCWConnectedDesc {
            get {
                return ResourceManager.GetString("RCWConnectedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when a remote access connection is disconnected. ähnelt.
        /// </summary>
        internal static string RCWDisconnectedDesc {
            get {
                return ResourceManager.GetString("RCWDisconnectedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the component will be enabled. ähnelt.
        /// </summary>
        internal static string RCWEnableRaisingEventsDesc {
            get {
                return ResourceManager.GetString("RCWEnableRaisingEventsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether stored credentials will be allowed if the credentials have not been provided. ähnelt.
        /// </summary>
        internal static string RDAllowUseStoredCredentialsDesc {
            get {
                return ResourceManager.GetString("RDAllowUseStoredCredentialsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the saved credentials will update upon completion of a successful connection attempt. ähnelt.
        /// </summary>
        internal static string RDAutoUpdateCredentialsDesc {
            get {
                return ResourceManager.GetString("RDAutoUpdateCredentialsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The callback number for the remote server to dial. ähnelt.
        /// </summary>
        internal static string RDCallbackNumberDesc {
            get {
                return ResourceManager.GetString("RDCallbackNumberDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the asynchronous dial operation has completed. ähnelt.
        /// </summary>
        internal static string RDDialCompletedDesc {
            get {
                return ResourceManager.GetString("RDDialCompletedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The phone number to dial (overriding the entry phone number). ähnelt.
        /// </summary>
        internal static string RDDPhoneNumberDesc {
            get {
                return ResourceManager.GetString("RDDPhoneNumberDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The extensible authentication protocol (EAP) options. ähnelt.
        /// </summary>
        internal static string RDEapOptionsDesc {
            get {
                return ResourceManager.GetString("RDEapOptionsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The entry options. ähnelt.
        /// </summary>
        internal static string RDEntryOptionsDesc {
            get {
                return ResourceManager.GetString("RDEntryOptionsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates the polling interval, in milliseconds, to determine whether the connection has completed disconnecting. ähnelt.
        /// </summary>
        internal static string RDHangUpPollingIntervalDesc {
            get {
                return ResourceManager.GetString("RDHangUpPollingIntervalDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The interface index on which the VPN connection will be dialed. ähnelt.
        /// </summary>
        internal static string RDInterfaceIndexDesc {
            get {
                return ResourceManager.GetString("RDInterfaceIndexDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether to not call the custom dial entry point of the custom dialer. ähnelt.
        /// </summary>
        internal static string RDOCustomDialDesc {
            get {
                return ResourceManager.GetString("RDOCustomDialDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether to disable the connected user interface. ähnelt.
        /// </summary>
        internal static string RDODisableConnectedUIDesc {
            get {
                return ResourceManager.GetString("RDODisableConnectedUIDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether to disable reconnect. ähnelt.
        /// </summary>
        internal static string RDODisableReconnectDesc {
            get {
                return ResourceManager.GetString("RDODisableReconnectDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether to disable the reconnect user interface. ähnelt.
        /// </summary>
        internal static string RDODisableReconnectUIDesc {
            get {
                return ResourceManager.GetString("RDODisableReconnectUIDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether no user is present. ähnelt.
        /// </summary>
        internal static string RDONoUserDesc {
            get {
                return ResourceManager.GetString("RDONoUserDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether to accept paused states. ähnelt.
        /// </summary>
        internal static string RDOPausedStatesDesc {
            get {
                return ResourceManager.GetString("RDOPausedStatesDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the connecting device is a router. ähnelt.
        /// </summary>
        internal static string RDORouterDesc {
            get {
                return ResourceManager.GetString("RDORouterDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether to set the modem speaker. ähnelt.
        /// </summary>
        internal static string RDOSetModemSpeakerDesc {
            get {
                return ResourceManager.GetString("RDOSetModemSpeakerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether to enable software compression. ähnelt.
        /// </summary>
        internal static string RDOSetSoftwareCompressionDesc {
            get {
                return ResourceManager.GetString("RDOSetSoftwareCompressionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the dialer should invoke a custom-scripting DLL after connecting. ähnelt.
        /// </summary>
        internal static string RDOUseCustomScriptingDesc {
            get {
                return ResourceManager.GetString("RDOUseCustomScriptingDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the prefix and suffix that is in the phone book should be used. ähnelt.
        /// </summary>
        internal static string RDOUsePrefixSuffixDesc {
            get {
                return ResourceManager.GetString("RDOUsePrefixSuffixDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The parent window used for dialog box creation and centering. ähnelt.
        /// </summary>
        internal static string RDOwnerDesc {
            get {
                return ResourceManager.GetString("RDOwnerDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The full path (including file name) of the phone book. ähnelt.
        /// </summary>
        internal static string RDPhoneBookPathDesc {
            get {
                return ResourceManager.GetString("RDPhoneBookPathDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether point-to-point authentication is skipped. ähnelt.
        /// </summary>
        internal static string RDSkipPppAuthDesc {
            get {
                return ResourceManager.GetString("RDSkipPppAuthDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the connection state changes. ähnelt.
        /// </summary>
        internal static string RDStateChangedDesc {
            get {
                return ResourceManager.GetString("RDStateChangedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The zero-based index of the sub-entry to dial. ähnelt.
        /// </summary>
        internal static string RDSubEntryIdDesc {
            get {
                return ResourceManager.GetString("RDSubEntryIdDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The length of time (in milliseconds) until the asynchronous connection attempt times out. ähnelt.
        /// </summary>
        internal static string RDTimeoutDesc {
            get {
                return ResourceManager.GetString("RDTimeoutDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the user data is obtained from WinLogon. ähnelt.
        /// </summary>
        internal static string REAPOLogOnDesc {
            get {
                return ResourceManager.GetString("REAPOLogOnDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the authentication protocol should not display a graphical user interface. ähnelt.
        /// </summary>
        internal static string REAPONonInteractiveDesc {
            get {
                return ResourceManager.GetString("REAPONonInteractiveDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the user should be prompted for identity information before dialing. ähnelt.
        /// </summary>
        internal static string REAPOPreviewDesc {
            get {
                return ResourceManager.GetString("REAPOPreviewDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The name of the entry. ähnelt.
        /// </summary>
        internal static string REDEntryNameDesc {
            get {
                return ResourceManager.GetString("REDEntryNameDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether entries cannot be renamed while in edit mode. ähnelt.
        /// </summary>
        internal static string REDNoRenameDesc {
            get {
                return ResourceManager.GetString("REDNoRenameDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The full path (including file name) of the phone book to modify. ähnelt.
        /// </summary>
        internal static string REDPhoneBookPathDesc {
            get {
                return ResourceManager.GetString("REDPhoneBookPathDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The phone number to dial. ähnelt.
        /// </summary>
        internal static string REDPhoneNumberDesc {
            get {
                return ResourceManager.GetString("REDPhoneNumberDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The style of dialog box to display. ähnelt.
        /// </summary>
        internal static string REDRasDialogStyleDesc {
            get {
                return ResourceManager.GetString("REDRasDialogStyleDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the phone book has changed. ähnelt.
        /// </summary>
        internal static string RPBChangedDesc {
            get {
                return ResourceManager.GetString("RPBChangedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the user creates a new entry or copies an existing entry. ähnelt.
        /// </summary>
        internal static string RPBDAddedEntryDesc {
            get {
                return ResourceManager.GetString("RPBDAddedEntryDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the user changes an existing phone book entry. ähnelt.
        /// </summary>
        internal static string RPBDChangedEntryDesc {
            get {
                return ResourceManager.GetString("RPBDChangedEntryDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the user successfully dials an entry. ähnelt.
        /// </summary>
        internal static string RPBDDialedEntryDesc {
            get {
                return ResourceManager.GetString("RPBDDialedEntryDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the phone book has been deleted. ähnelt.
        /// </summary>
        internal static string RPBDeletedDesc {
            get {
                return ResourceManager.GetString("RPBDeletedDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The name of the entry to initially highlight. ähnelt.
        /// </summary>
        internal static string RPBDEntryNameDesc {
            get {
                return ResourceManager.GetString("RPBDEntryNameDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the user removes a phone book entry. ähnelt.
        /// </summary>
        internal static string RPBDRemovedEntryDesc {
            get {
                return ResourceManager.GetString("RPBDRemovedEntryDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates whether the phone book file will be monitored for external changes. ähnelt.
        /// </summary>
        internal static string RPBEnableFileWatcherDesc {
            get {
                return ResourceManager.GetString("RPBEnableFileWatcherDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Occurs when the phone book has been renamed. ähnelt.
        /// </summary>
        internal static string RPBRenamedDesc {
            get {
                return ResourceManager.GetString("RPBRenamedDesc", resourceCulture);
            }
        }
    }
}
